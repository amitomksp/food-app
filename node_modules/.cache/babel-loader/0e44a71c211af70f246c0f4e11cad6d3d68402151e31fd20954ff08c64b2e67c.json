{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\mernfoodapp1\\\\mernfoodapp\\\\src\\\\component\\\\contextReducer.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cartStateContext = /*#__PURE__*/createContext();\nconst cartDispatchContext = /*#__PURE__*/createContext();\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      return [...state, {\n        id: action.id,\n        name: action.name,\n        qty: action.qty,\n        size: action.size,\n        price: action.price,\n        img: action.img\n      }];\n    case \"REMOVE\":\n      let newArr = [...state];\n      newArr.splice(action.index, 1);\n      return newArr;\n    // case \"UPDATE\":\n    //   let arr = [...state]\n    //   arr.find((food, index) => {\n    //       if (food.id === action.id) {\n    //           console.log(food.qty, parseInt(action.qty), action.price + food.price)\n    //           arr[index] = { ...food, qty: parseInt(action.qty) + food.qty, price: action.price + food.price }\n    //       }\n    //       return arr\n    //   })\n    //   return arr\n    case \"DROP\":\n      let empArray = [];\n      return empArray;\n    default:\n      console.log(\"error in reducer\");\n  }\n};\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, []);\n  return /*#__PURE__*/_jsxDEV(cartDispatchContext.Provider, {\n    value: dispatch,\n    children: /*#__PURE__*/_jsxDEV(cartStateContext.Provider, {\n      value: state,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"hqbLHcuPp8rcu0XQW411A7H6uMw=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(cartStateContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const useDispatchCart = () => {\n  _s3();\n  return useContext(cartDispatchContext);\n};\n_s3(useDispatchCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","cartStateContext","cartDispatchContext","reducer","state","action","type","id","name","qty","size","price","img","newArr","splice","index","empArray","console","log","CartProvider","children","_s","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","useDispatchCart","_s3","$RefreshReg$"],"sources":["C:/projects/mernfoodapp1/mernfoodapp/src/component/contextReducer.js"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react'\r\n\r\nconst cartStateContext = createContext();\r\nconst cartDispatchContext = createContext();\r\n\r\nconst reducer = (state,action)=>{\r\n  switch(action.type){\r\n    case \"ADD\":\r\n      return [...state,{id:action.id,name:action.name,qty:action.qty,size:action.size,price:action.price,img:action.img}]\r\n      case \"REMOVE\":\r\n        let newArr = [...state]\r\n        newArr.splice(action.index, 1)\r\n        return newArr;\r\n        // case \"UPDATE\":\r\n        //   let arr = [...state]\r\n        //   arr.find((food, index) => {\r\n        //       if (food.id === action.id) {\r\n        //           console.log(food.qty, parseInt(action.qty), action.price + food.price)\r\n        //           arr[index] = { ...food, qty: parseInt(action.qty) + food.qty, price: action.price + food.price }\r\n        //       }\r\n        //       return arr\r\n        //   })\r\n        //   return arr\r\n          case \"DROP\":\r\n            let empArray = []\r\n            return empArray\r\n      default:\r\n        console.log(\"error in reducer\")\r\n  }\r\n\r\n}\r\n\r\nexport const CartProvider=({children})=> {\r\n  const[state,dispatch] = useReducer(reducer,[])\r\n  return (\r\n    <cartDispatchContext.Provider value={dispatch}>\r\n          <cartStateContext.Provider value={state}>\r\n            {children}\r\n          </cartStateContext.Provider>\r\n    </cartDispatchContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useCart = () => useContext(cartStateContext);\r\nexport const useDispatchCart = () => useContext(cartDispatchContext);"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,gBAAgB,gBAAGL,aAAa,CAAC,CAAC;AACxC,MAAMM,mBAAmB,gBAAGN,aAAa,CAAC,CAAC;AAE3C,MAAMO,OAAO,GAAGA,CAACC,KAAK,EAACC,MAAM,KAAG;EAC9B,QAAOA,MAAM,CAACC,IAAI;IAChB,KAAK,KAAK;MACR,OAAO,CAAC,GAAGF,KAAK,EAAC;QAACG,EAAE,EAACF,MAAM,CAACE,EAAE;QAACC,IAAI,EAACH,MAAM,CAACG,IAAI;QAACC,GAAG,EAACJ,MAAM,CAACI,GAAG;QAACC,IAAI,EAACL,MAAM,CAACK,IAAI;QAACC,KAAK,EAACN,MAAM,CAACM,KAAK;QAACC,GAAG,EAACP,MAAM,CAACO;MAAG,CAAC,CAAC;IACnH,KAAK,QAAQ;MACX,IAAIC,MAAM,GAAG,CAAC,GAAGT,KAAK,CAAC;MACvBS,MAAM,CAACC,MAAM,CAACT,MAAM,CAACU,KAAK,EAAE,CAAC,CAAC;MAC9B,OAAOF,MAAM;IACb;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACE,KAAK,MAAM;MACT,IAAIG,QAAQ,GAAG,EAAE;MACjB,OAAOA,QAAQ;IACrB;MACEC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EACrC;AAEF,CAAC;AAED,OAAO,MAAMC,YAAY,GAACA,CAAC;EAACC;AAAQ,CAAC,KAAI;EAAAC,EAAA;EACvC,MAAK,CAACjB,KAAK,EAACkB,QAAQ,CAAC,GAAGxB,UAAU,CAACK,OAAO,EAAC,EAAE,CAAC;EAC9C,oBACEH,OAAA,CAACE,mBAAmB,CAACqB,QAAQ;IAACC,KAAK,EAAEF,QAAS;IAAAF,QAAA,eACxCpB,OAAA,CAACC,gBAAgB,CAACsB,QAAQ;MAACC,KAAK,EAAEpB,KAAM;MAAAgB,QAAA,EACrCA;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACgB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEnC,CAAC;AAAAP,EAAA,CATYF,YAAY;AAAAU,EAAA,GAAZV,YAAY;AAWzB,OAAO,MAAMW,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMlC,UAAU,CAACI,gBAAgB,CAAC;AAAA;AAAC8B,GAAA,CAA7CD,OAAO;AACpB,OAAO,MAAME,eAAe,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMpC,UAAU,CAACK,mBAAmB,CAAC;AAAA;AAAC+B,GAAA,CAAxDD,eAAe;AAAA,IAAAH,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}